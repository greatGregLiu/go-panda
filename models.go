// Created by go generate; DO NOT EDIT

package panda

// Cloud was autogenerated by go generate.
type Cloud struct {
	CreatedAt       Time   `json:"created_at" url:"created_at"`
	ID              string `json:"id" url:"id"`
	Name            string `json:"name" url:"name"`
	S3PrivateAccess bool   `json:"s3_private_access" url:"s3_private_access"`
	S3VideosBucket  string `json:"s3_videos_bucket" url:"s3_videos_bucket"`
	URL             string `json:"url" url:"url"`
	UpdatedAt       Time   `json:"updated_at" url:"updated_at"`
}

// Encoding was autogenerated by go generate.
type Encoding struct {
	AudioBitrate      int      `json:"audio_bitrate" url:"audio_bitrate"`
	AudioChannels     int      `json:"audio_channels" url:"audio_channels"`
	AudioCodec        string   `json:"audio_codec" url:"audio_codec"`
	AudioSampleRate   int      `json:"audio_sample_rate" url:"audio_sample_rate"`
	CreatedAt         Time     `json:"created_at" url:"created_at"`
	Duration          int      `json:"duration" url:"duration"`
	EncodingProgress  float64  `json:"encoding_progress" url:"encoding_progress"`
	EncodingTime      float64  `json:"encoding_time" url:"encoding_time"`
	ErrorClass        string   `json:"error_class" url:"error_class"`
	ErrorMessage      string   `json:"error_message" url:"error_message"`
	ExternalID        string   `json:"external_id" url:"external_id"`
	Extname           string   `json:"extname" url:"extname"`
	FileSize          int64    `json:"file_size" url:"file_size"`
	Files             []string `json:"files" url:"files"`
	Fps               float64  `json:"fps" url:"fps"`
	Height            int      `json:"height" url:"height"`
	ID                string   `json:"id" url:"id"`
	MimeType          string   `json:"mime_type" url:"mime_type"`
	Path              string   `json:"path" url:"path"`
	ProfileID         string   `json:"profile_id" url:"profile_id"`
	ProfileName       string   `json:"profile_name" url:"profile_name"`
	StartedEncodingAt string   `json:"started_encoding_at" url:"started_encoding_at"`
	Status            Status   `json:"status" url:"status"`
	UpdatedAt         Time     `json:"updated_at" url:"updated_at"`
	VideoBitrate      int      `json:"video_bitrate" url:"video_bitrate"`
	VideoCodec        string   `json:"video_codec" url:"video_codec"`
	VideoID           string   `json:"video_id" url:"video_id"`
	Width             int      `json:"width" url:"width"`
}

// EncodingRequest was autogenerated by go generate.
type EncodingRequest struct {
	Page        int    `json:"page" url:"page"`
	PerPage     int    `json:"per_page" url:"per_page"`
	ProfileID   string `json:"profile_id" url:"profile_id"`
	ProfileName string `json:"profile_name" url:"profile_name"`
	Status      Status `json:"status" url:"status"`
	VideoID     string `json:"video_id" url:"video_id"`
}

// Events was autogenerated by go generate.
type Events struct {
	EncodingCompleted bool `json:"encoding_completed" url:"encoding_completed"`
	EncodingProgress  bool `json:"encoding_progress" url:"encoding_progress"`
	VideoCreated      bool `json:"video_created" url:"video_created"`
	VideoEncoded      bool `json:"video_encoded" url:"video_encoded"`
}

// NewEncodingRequest was autogenerated by go generate.
type NewEncodingRequest struct {
	ProfileID   string `json:"profile_id" url:"profile_id"`
	ProfileName string `json:"profile_name" url:"profile_name"`
	VideoID     string `json:"video_id" url:"video_id"`
}

// NewProfileRequest was autogenerated by go generate.
type NewProfileRequest struct {
	AddTimestamp     bool       `json:"add_timestamp" url:"add_timestamp"`
	AspectMode       AspectMode `json:"aspect_mode" url:"aspect_mode"`
	AudioBitrate     int        `json:"audio_bitrate" url:"audio_bitrate"`
	AudioChannels    int        `json:"audio_channels" url:"audio_channels"`
	AudioSampleRate  int        `json:"audio_sample_rate" url:"audio_sample_rate"`
	BufferSize       int        `json:"buffer_size" url:"buffer_size"`
	ClipLength       string     `json:"clip_length" url:"clip_length"`
	ClipOffset       string     `json:"clip_offset" url:"clip_offset"`
	Command          string     `json:"command" url:"command"`
	Deinterlace      string     `json:"deinterlace" url:"deinterlace"`
	Encryption       bool       `json:"encryption" url:"encryption"`
	EncryptionIv     string     `json:"encryption_iv" url:"encryption_iv"`
	EncryptionKey    string     `json:"encryption_key" url:"encryption_key"`
	EncryptionKeyURL string     `json:"encryption_key_url" url:"encryption_key_url"`
	Extname          string     `json:"extname" url:"extname"`
	Fps              float64    `json:"fps" url:"fps"`
	FrameCount       int        `json:"frame_count" url:"frame_count"`
	FrameInterval    string     `json:"frame_interval" url:"frame_interval"`
	FrameOffsets     string     `json:"frame_offsets" url:"frame_offsets"`
	H264Crf          int        `json:"h264_crf" url:"h264_crf"`
	H264Level        string     `json:"h264_level" url:"h264_level"`
	H264Profile      string     `json:"h264_profile" url:"h264_profile"`
	H264Tune         string     `json:"h264_tune" url:"h264_tune"`
	Height           int        `json:"height" url:"height"`
	KeyframeInterval int        `json:"keyframe_interval" url:"keyframe_interval"`
	KeyframeRate     float64    `json:"Keyframe_rate" url:"Keyframe_rate"`
	MaxRate          int        `json:"max_rate" url:"max_rate"`
	Name             string     `json:"name" url:"name"`
	PresetName       string     `json:"preset_name" url:"preset_name"`
	Stack            string     `json:"stack" url:"stack"`
	Title            string     `json:"title" url:"title"`
	TwoPass          string     `json:"two_pass" url:"two_pass"`
	Upscale          bool       `json:"upscale" url:"upscale"`
	VideoBitrate     int        `json:"video_bitrate" url:"video_bitrate"`
	WatermarkBottom  int        `json:"watermark_bottom" url:"watermark_bottom"`
	WatermarkHeight  int        `json:"watermark_height" url:"watermark_height"`
	WatermarkLeft    int        `json:"watermark_left" url:"watermark_left"`
	WatermarkRight   int        `json:"watermark_right" url:"watermark_right"`
	WatermarkTop     int        `json:"watermark_top" url:"watermark_top"`
	WatermarkURL     string     `json:"watermark_url" url:"watermark_url"`
	WatermarkWidth   int        `json:"watermark_width" url:"watermark_width"`
	Width            int        `json:"width" url:"width"`
}

// NewVideoRequest was autogenerated by go generate.
type NewVideoRequest struct {
	PathFormat string   `json:"path_format" url:"path_format"`
	Payload    string   `json:"payload" url:"payload"`
	Profiles   []string `json:"profiles" url:"profiles"`
}

// Notification was autogenerated by go generate.
type Notification struct {
	Delay  float64 `json:"delay" url:"delay"`
	Events Events  `json:"events" url:"events"`
	URL    string  `json:"url" url:"url"`
}

// Profile was autogenerated by go generate.
type Profile struct {
	AddTimestamp     bool       `json:"add_timestamp" url:"add_timestamp"`
	AspectMode       AspectMode `json:"aspect_mode" url:"aspect_mode"`
	AudioBitrate     int        `json:"audio_bitrate" url:"audio_bitrate"`
	AudioChannels    int        `json:"audio_channels" url:"audio_channels"`
	AudioSampleRate  int        `json:"audio_sample_rate" url:"audio_sample_rate"`
	BufferSize       int        `json:"buffer_size" url:"buffer_size"`
	ClipLength       string     `json:"clip_length" url:"clip_length"`
	ClipOffset       string     `json:"clip_offset" url:"clip_offset"`
	Command          string     `json:"command" url:"command"`
	CreatedAt        Time       `json:"created_at" url:"created_at"`
	Deinterlace      string     `json:"deinterlace" url:"deinterlace"`
	Encryption       bool       `json:"encryption" url:"encryption"`
	EncryptionIv     string     `json:"encryption_iv" url:"encryption_iv"`
	EncryptionKey    string     `json:"encryption_key" url:"encryption_key"`
	EncryptionKeyURL string     `json:"encryption_key_url" url:"encryption_key_url"`
	Extname          string     `json:"extname" url:"extname"`
	Fps              float64    `json:"fps" url:"fps"`
	FrameCount       int        `json:"frame_count" url:"frame_count"`
	FrameInterval    string     `json:"frame_interval" url:"frame_interval"`
	FrameOffsets     string     `json:"frame_offsets" url:"frame_offsets"`
	H264Crf          int        `json:"h264_crf" url:"h264_crf"`
	H264Level        string     `json:"h264_level" url:"h264_level"`
	H264Profile      string     `json:"h264_profile" url:"h264_profile"`
	H264Tune         string     `json:"h264_tune" url:"h264_tune"`
	Height           int        `json:"height" url:"height"`
	ID               string     `json:"id" url:"id"`
	KeyframeInterval int        `json:"keyframe_interval" url:"keyframe_interval"`
	KeyframeRate     float64    `json:"Keyframe_rate" url:"Keyframe_rate"`
	MaxRate          int        `json:"max_rate" url:"max_rate"`
	Name             string     `json:"name" url:"name"`
	PresetName       string     `json:"preset_name" url:"preset_name"`
	Stack            string     `json:"stack" url:"stack"`
	Title            string     `json:"title" url:"title"`
	TwoPass          string     `json:"two_pass" url:"two_pass"`
	UpdatedAt        Time       `json:"updated_at" url:"updated_at"`
	Upscale          bool       `json:"upscale" url:"upscale"`
	VideoBitrate     int        `json:"video_bitrate" url:"video_bitrate"`
	WatermarkBottom  int        `json:"watermark_bottom" url:"watermark_bottom"`
	WatermarkHeight  int        `json:"watermark_height" url:"watermark_height"`
	WatermarkLeft    int        `json:"watermark_left" url:"watermark_left"`
	WatermarkRight   int        `json:"watermark_right" url:"watermark_right"`
	WatermarkTop     int        `json:"watermark_top" url:"watermark_top"`
	WatermarkURL     string     `json:"watermark_url" url:"watermark_url"`
	WatermarkWidth   int        `json:"watermark_width" url:"watermark_width"`
	Width            int        `json:"width" url:"width"`
}

// ProfileRequest was autogenerated by go generate.
type ProfileRequest struct {
	Expand  bool `json:"expand" url:"expand"`
	Page    int  `json:"page" url:"page"`
	PerPage int  `json:"per_page" url:"per_page"`
}

// Video was autogenerated by go generate.
type Video struct {
	AudioBitrate     int     `json:"audio_bitrate" url:"audio_bitrate"`
	AudioChannels    int     `json:"audio_channels" url:"audio_channels"`
	AudioCodec       string  `json:"audio_codec" url:"audio_codec"`
	AudioSampleRate  int     `json:"audio_sample_rate" url:"audio_sample_rate"`
	CreatedAt        Time    `json:"created_at" url:"created_at"`
	Duration         int     `json:"duration" url:"duration"`
	ErrorClass       string  `json:"error_class" url:"error_class"`
	ErrorMessage     string  `json:"error_message" url:"error_message"`
	Extname          string  `json:"extname" url:"extname"`
	FileSize         int64   `json:"file_size" url:"file_size"`
	Fps              float64 `json:"fps" url:"fps"`
	Height           int     `json:"height" url:"height"`
	ID               string  `json:"id" url:"id"`
	MimeType         string  `json:"mime_type" url:"mime_type"`
	OriginalFilename string  `json:"original_filename" url:"original_filename"`
	Path             string  `json:"path" url:"path"`
	Payload          string  `json:"payload" url:"payload"`
	SourceURL        string  `json:"source_url" url:"source_url"`
	Status           Status  `json:"status" url:"status"`
	UpdatedAt        Time    `json:"updated_at" url:"updated_at"`
	VideoBitrate     int     `json:"video_bitrate" url:"video_bitrate"`
	VideoCodec       string  `json:"video_codec" url:"video_codec"`
	Width            int     `json:"width" url:"width"`
}

// VideoRequest was autogenerated by go generate.
type VideoRequest struct {
	Page    int    `json:"page" url:"page"`
	PerPage int    `json:"per_page" url:"per_page"`
	Status  Status `json:"status" url:"status"`
}
